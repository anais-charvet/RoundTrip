let express,cors,fs;_fbc‍.w("express",[["default",["express"],function(v){express=v}]]);_fbc‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_fbc‍.w("fs",[["default",["fs"],function(v){fs=v}]]);


const morgan = require("morgan");
require("dotenv").config();

//creation express app
const app = express();

// apply middleware (code running before resp sent to client)
app.use(cors());
app.use(express.json());
app.use(morgan("dev"));

// next = callback function needed by any middlewares not to stop at here console.log, otherwise send resp immediatly
// app.use((req, res, next) => {
//     console.log("this is the middleware");
//     next();
// });

//route, think express as a (req, res) handler
// app.get("/", (req, res) => {
//     res.send("you hit server endpoint");
// })

//route
fs.readdirSync("./routes").map((r) => 
    app.use("/api", require("./routes/${r}"))
);

//port, with process as top level object of node where entire process runs.
const port = process.env.PORT || 8000;

app.listen(port, () => console.log(`Server is running on port ${port}`));
